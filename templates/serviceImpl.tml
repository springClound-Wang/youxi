package com.husheng.youxi.service.${model};


import java.util.List;
import java.util.Map;
import java.util.ArrayList;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.husheng.youxi.mapper.${beanModel}Mapper;
import com.husheng.youxi.pojo.${beanModel};
import com.husheng.youxi.core.ServerResponse;
import com.husheng.youxi.core.Params;
import com.husheng.youxi.util.TmStringUtils;


/**
 * 
 * todo:${description}Service实现类
 * ${beanModel}ServiceImpl<br/>
 * 作者:${author}<br/>
 * 创建时间：${datetime} <br/>
 * @version 1.0.0<br/>
 *
 */
@Service
public class ${beanModel}ServiceImpl implements I${beanModel}Service  {

	@Autowired
	private ${beanModel}Mapper ${model}Mapper;

	@Override
	public ServerResponse query${beanModel}All(String keyword,int pageNo,int pageSize){
		PageHelper.startPage(pageNo,pageSize);
		Params params = new Params();
		params.setIsDelete(0);
		params.setKeyword(keyword);
		List<${beanModel}> ${model}s = ${model}Mapper.query${beanModel}All(params);
		PageInfo<${beanModel}> pageInfo = new PageInfo<>(${model}s);
		return ServerResponse.createBySuccess(pageInfo);
	}

	@Override
	public ServerResponse query${beanModel}AllForMap(String keyword,int pageNo,int pageSize){
		PageHelper.startPage(pageNo,pageSize);
		Params params = new Params();
		params.setIsDelete(0);
		params.setKeyword(keyword);
		List<Map<String,Object>>  ${model}s = ${model}Mapper.query${beanModel}AllForMap(params);
		PageInfo<Map<String,Object>> pageInfo = new PageInfo<>(${model}s);
		return ServerResponse.createBySuccess(pageInfo);
	}

	@Override
	public ServerResponse get${beanModel}ById(Integer id) {
	${beanModel} ${model} = ${model}Mapper.get${beanModel}ById(id);
	return ${model}!=null?ServerResponse.createBySuccess(${model}):ServerResponse.createByError();
	}

	@Override
	public ServerResponse get${beanModel}ByIdForMap(Integer id){
	Map<String,Object> ${model} = ${model}Mapper.get${beanModel}ByIdForMap(id);
	return ${model}!=null?ServerResponse.createBySuccess(${model}):ServerResponse.createByError();
	}
	
	@Override
	public ServerResponse save${beanModel}(${beanModel} ${model}) {
		<#list fields as data>
		<#if data.name!='id' && data.name!="createTime" && data.name!='updateTime'>
		<#if data.name=='status'>
		// 发布状态 0未发布 1发布
		${model}.setStatus(1);
		<#elseif data.name=='isDeleted'>
	    // 删除状态 0未删除 1删除
		${model}.setIsDeleted(0);
		<#else>
		// ${data.comment}
		${model}.set${data.hname}(null);
		</#if>
		</#if>
		</#list>
		int count = ${model}Mapper.save${beanModel}(${model});
		return count>0?ServerResponse.createBySuccess(${model}):ServerResponse.createByError();
	}
	
	@Override
	public ServerResponse update${beanModel}(${beanModel} ${model}) {
		int count = ${model}Mapper.update${beanModel}(${model});
		return count>0?ServerResponse.createBySuccess(${model}):ServerResponse.createByError();
	}

	@Override
	public ServerResponse delete${beanModel}ById(Integer id) {
		int count = ${model}Mapper.delete${beanModel}ById(id);
		return count>0?ServerResponse.createBySuccess():ServerResponse.createByError();
	}

	@Override
	public ServerResponse delete${beanModel}ByIds(String opids) {
		if(TmStringUtils.isEmpty(opids)){return ServerResponse.createByError();}
		String[] idStrings = opids.split(",");
		List<Integer> idIntegers = new ArrayList<Integer>();
		for (String string : idStrings) {
			idIntegers.add(Integer.parseInt(string));
		}
		int count = ${model}Mapper.delete${beanModel}ByIds(idIntegers);
		return count>0?ServerResponse.createBySuccess(count):ServerResponse.createByError();
	}
}
